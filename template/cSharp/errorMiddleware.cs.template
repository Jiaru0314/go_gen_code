using System.Net;
using EAMS.API.Helpers;
using Microsoft.Data.SqlClient;
using JsonSerializer = System.Text.Json.JsonSerializer;

namespace EAMS.API.Middlewares;

/// <summary>
/// 全局异常处理器
/// </summary>
public class ErrorHandlerMiddleware
{
    private readonly RequestDelegate _next;

    /// <summary>
    /// 构造函数
    /// </summary>
    /// <param name="next"></param>
    public ErrorHandlerMiddleware(RequestDelegate next)
    {
        _next = next;
    }

    /// <summary>
    /// Invoke
    /// </summary>
    /// <param name="context"></param>
    /// <param name="logger"></param>
    public async Task Invoke(HttpContext context, ILogger<ErrorHandlerMiddleware> logger)
    {
        try
        {
            await _next(context);
        }
        catch (Exception ex)
        {
            // 打印异常栈
            logger.LogError(ex, "系统发生异常: {Message}, 堆栈跟踪:{StackTrace}", ex.Message, ex.StackTrace);

            var response = context.Response;
            response.ContentType = "application/json";
            logger.LogError("");
            string result;
            switch (ex)
            {
                case ArgumentException:
                    // 参数异常 状态码可根据需要 设置200 / 400
                    response.StatusCode = (int)HttpStatusCode.OK;
                    result = JsonSerializer.Serialize(R_SysResBase.Fail(ex.Message));
                    break;
                case BizException:
                    // 系统自定义业务异常
                    response.StatusCode = (int)HttpStatusCode.InternalServerError;
                    result = JsonSerializer.Serialize(R_SysResBase.Fail(ex.Message));
                    break;
                case SqlException:
                    // 数据库异常
                    response.StatusCode = (int)HttpStatusCode.InternalServerError;
                    result = JsonSerializer.Serialize(R_SysResBase.Fail("数据库操作异常,请联系系统管理员处理"));
                    break;
                default:
                    // 未捕捉的异常
                    response.StatusCode = (int)HttpStatusCode.InternalServerError;
                    result = JsonSerializer.Serialize(R_SysResBase.Fail("系统异常,请联系系统管理员处理"));
                    break;
            }

            await response.WriteAsync(result);
        }
    }
}